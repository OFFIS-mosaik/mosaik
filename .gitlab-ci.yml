variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

stages:
 - Tests
 - Release

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_REF_PROTECTED == "true"

default:
  image: rye
  tags: [prepared-rye]
  cache:
    paths:
      - .cache/pip

Unit tests:
  stage: Tests
  script:
    - rye pin 3.8 && rye test
    - rye pin 3.9 && rye test
    - rye pin 3.10 && rye test
    - rye pin 3.11 && rye test
    - rye pin 3.12 && rye test -- --junit-xml=pytest.xml --cov --cov-report xml --cov-report term
  artifacts:
    when: always
    paths:
      - pytest.xml
      - coverage.xml
    reports:
      junit: pytest.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  coverage: /TOTAL.* (\d+.?\d*)%/
  rules:
    - if: '$CI_COMMIT_TAG == null'
  needs: []

Benchmark tests:
  stage: Tests
  script:
    - rye pin 3.12 && rye test -- --benchmarks tests/test_benchmarks.py
  rules:
    - if: '$CI_COMMIT_TAG == null'
      when: manual
  needs: []

Linting:
  allow_failure: true
  stage: Tests
  script:
    - rye lint
  rules:
    - if: '$CI_COMMIT_TAG == null'
  needs: []

Formatting:
  allow_failure: true
  stage: Tests
  script:
    - rye format --check
  rules:
    - if: '$CI_COMMIT_TAG == null'
  needs: []

# Basic job to upload the newly tagged version of mosaik to pypi. The server can be chosen, i.e., the test or production server.
.pypi:
  variables:
    TWINE_USERNAME: $MOSAIK_PYPI_USER
  before_script:
    - pip install -U build twine
  script:
    - echo "Publishing version tagged $CI_COMMIT_TAG"
    - 'echo "Commit ref is: ${CI_COMMIT_REF_NAME}"'
    - echor "Publishing as user $PYPI_USER"    - python -m build
    - python -m twine check --strict dist/*
    - python -m twine upload --repository-url "$REPOSITORY_URL" --username $TWINE_USERNAME --password $TWINE_PASSWORD dist/*
  rules:
    - if: $CI_COMMIT_TAG
      when: manual
  needs: []

# Release the newly tagged version of mosaik on the test instance of pypi.
Test release:
  extends: .pypi
  stage: Release
  variables:
    REPOSITORY_URL: https://test.pypi.org/legacy/
    TWINE_PASSWORD: $MOSAIK_TEST_PYPI_TOKEN

# Release the newly tagged version of mosaik on pypi.
PyPI release:
  extends: .pypi
  stage: Release
  variables:
    REPOSITORY_URL: https://upload.pypi.org/legacy/
    TWINE_PASSWORD: $MOSAIK_PYPI_PASSWORD

# Execute the pipeline from the mosaik demo project
mosaik demo:
  stage: Tests
  variables:
    UPSTREAM_BRANCH: $CI_COMMIT_REF_NAME # pass the branch name to the downstream pipeline to check out the correct mosaik version
  trigger: 
    project: mosaik/examples/mosaik-demo
    branch: master
  when: manual
